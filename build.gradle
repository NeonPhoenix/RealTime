buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'forge'
apply plugin: 'java'

def buildnumber = System.getenv("BUILD_NUMBER") ?: "0"
version = "v1.1." + buildnumber.toString()
group= "net.petercashel.RealTime" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "RealTime"

defaultTasks 'build'

minecraft {
    version = "1.7.10-10.13.4.1490-1.7.10"
	runDir = "eclipse"
}

processResources
{
    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

jar {
    version = "${project.minecraft.version}-${project.version}"
    classifier = 'universal'
    manifest {
        attributes("FMLCorePlugin": "net.petercashel.RealTime.RealTimeFMLLoadingPlugin", "FMLCorePluginContainsFMLMod": "RealTime")
    }
}
// Add in a source jar for people, should they desire to download such a thing
task sourceJar(type: Jar) {
	from sourceSets.main.allSource
	classifier = 'src'
    version = "${project.minecraft.version}-${project.version}"
}

// Add in an mcp named jar, for those who wish to run in a development environment (assuming mcp naming matches)
task deobfJar(type: Jar) {
	from sourceSets.main.output
	classifier = 'deobf'
    version = "${project.minecraft.version}-${project.version}"
    manifest {
        attributes("FMLCorePlugin": "net.petercashel.RealTime.RealTimeFMLLoadingPlugin")
    }
}

task PomJar(type: Jar) {
	from sourceSets.main.output
	version = "${project.minecraft.version}-${project.version}"
}

// Tell the artifact system about our extra jars
artifacts {
	archives sourceJar, deobfJar, PomJar
}

task copyFiles(type: Copy) {
    dependsOn 'reobf','PomJar'
    
    def inputFile = project.archivesBaseName + '-' + project.minecraft.version + '-' + project.version + '-universal.jar'
    def outputFile = project.archivesBaseName + '-' + project.minecraft.version + '-' + project.version + '.jar'
    
    from ('build/libs/')
    into ('build/libs/')
    include (inputFile)
    rename (inputFile, outputFile)
}
